---
- name: Verify MongoDB
  hosts: all
  become: true
  vars:
    mongodb_test:
      name: "Test"
    mongodb_retries: 6
    mongodb_delay: 10
  tasks:
    - name: Create virtualenv
      ansible.builtin.tempfile:
        state: directory
        prefix: .virtualenv
        path: "~"
      register: _virtualenv_tmpdir
      changed_when: false

    - name: Initialize virtualenv
      ansible.builtin.pip:
        name:
          - pymongo
          - python-gnupg
        virtualenv: "{{ _virtualenv_tmpdir.path }}/venv"
      changed_when: false

    - name: Change python interpreter
      ansible.builtin.set_fact:
        ansible_python_interpreter: "{{ _virtualenv_tmpdir.path }}/venv/bin/python"

    - name: Query replicaset membership
      community.mongodb.mongodb_shell:
        eval: "rs.isMaster().ismaster"
      retries: "{{ mongodb_retries }}"
      delay: "{{ mongodb_delay }}"
      register: mongodb_rs
      until: mongodb_rs is succeeded
      changed_when: false

    - name: Set replicaset primary facts
      ansible.builtin.set_fact:
        replicaset_primary: "{{ mongodb_rs.transformed_output | list | first | bool }}"

    - name: Evaluate MongoDB shell commands
      when: replicaset_primary
      block:
        - name: Create MongoDB test database
          community.mongodb.mongodb_shell:
            login_database: "testdb"
            eval: "db.test.insert({{ mongodb_test }})"
          retries: "{{ mongodb_retries }}"
          delay: "{{ mongodb_delay }}"
          register: mongodb_shell_output
          until: mongodb_shell_output is succeeded

        - name: List MongoDB databases
          community.mongodb.mongodb_shell:
            eval: "db.adminCommand('listDatabases')"
            stringify: true
          changed_when: false
          retries: "{{ mongodb_retries }}"
          delay: "{{ mongodb_delay }}"
          register: mongodb_shell_output
          until: mongodb_shell_output is succeeded

        - name: Find MongoDB test database metadata
          community.mongodb.mongodb_shell:
            login_database: "testdb"
            eval: "db.test.find({{ mongodb_test }}).toArray()"
          failed_when: mongodb_shell_output.transformed_output | length == 0
          changed_when: false
          register: mongodb_shell_output

        - name: Drop MongoDB test database
          community.mongodb.mongodb_shell:
            login_database: "testdb"
            eval: "db.dropDatabase()"
          changed_when: false
          retries: "{{ mongodb_retries }}"
          delay: "{{ mongodb_delay }}"
          register: mongodb_shell_output
          until: mongodb_shell_output is succeeded
      always:
        - name: Destroy virtualenv
          ansible.builtin.file:
            path: "{{ _virtualenv_tmpdir.path }}"
            state: absent
          changed_when: false
